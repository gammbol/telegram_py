import telebot
from telebot import types

bot  = telebot.TeleBot('2124840185:AAE1nh4vlzNfqRV_hzAjQVUvuZv3HgVQT0s')

#timetable data
chosen_time = ''
chosen_date = ''
chosen_lesson = ''
monday={}
tuesday = {}
wednesday = {}
thursday = {}
friday = {}
saturday = {}
sunday = {}

#start chatting with bot
@bot.message_handler(commands=['start'])
def start(message):
    sti = open('welcome_sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, <b>{0.first_name}</b>! \n–° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, —è, <b>{1.first_name}</b>, –±—É–¥—É –≤–∞—à–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º\
 –≤ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —à–∫–æ–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!".format(message.from_user, bot.get_me()), parse_mode='html')

#start of registration
@bot.message_handler(commands=['reg'])
def reg(message):
    #keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    item2 = types.KeyboardButton('‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
    markup.add(item1,item2)

    bot.send_message(message.chat.id, '–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:', reply_markup=markup)

#echo all messages
@bot.message_handler(func=lambda m: True)
def echo_all(message):
    if message.text == 'üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        bot.register_next_step_handler(message, create_new_timetable)
    elif message.text == '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        global monday, tuesday, wednesday, thursday, friday, saturday, sunday

        #checks dictionaries filling
        if monday=='' or tuesday=='' or wednesday=='' or thursday=='' or friday=='' or saturday=='' or sunday=='':
            bot.reply_to(message, '–¢–µ–±–µ –Ω–µ—á–µ–≥–æ –∏–∑–º–µ–Ω—è—Ç—å!\n–°–æ–∑–¥–∞–π –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!')

        #using keyboeard
        else:
            #keyboard
            date = types.ReplyKeyboardMarkup(resize_keyboard=True)
            mo = types.KeyboardButton('üåÉ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
            tu = types.KeyboardButton('üèô –í—Ç–æ—Ä–Ω–∏–∫')
            we = types.KeyboardButton('üèû –°—Ä–µ–¥–∞')
            th = types.KeyboardButton('üåÖ –ß–µ—Ç–≤–µ—Ä–≥')
            fr = types.KeyboardButton('üåÑ –ü—è—Ç–Ω–∏—Ü–∞')
            sa = types.KeyboardButton('üåá –°—É–±–±–æ—Ç–∞')
            su = types.KeyboardButton('üåå –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
            date.add(mo, tu, we, th, fr, sa, su).–∫—É–ø

            #question
            bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ!\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∫–æ–≥–æ –¥–Ω—è —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å?', reply_markup=date)

            #next registration step
            bot.register_next_step_handler(message, determine_date)
    else:
        bot.reply_to(message, '–£ —Ç–µ–±—è –Ω–µ—Ç –¥—Ä—É–∑–µ–π?\n–ü–æ—á–µ–º—É —Ç—ã –æ–±—â–∞–µ—à—å—Å—è —Å –±–æ—Ç–æ–º?')

#creating new timetable
def create_new_timetable(message):
    bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ! –¢–æ–≥–¥–∞ –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞.\n\
        –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞ –∏–ª–∏ "0", —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è :)')
    if message.text == '0':
        bot.send_message(message.chat.id, '–¢–∞–∫, –¥–æ —Å—é–¥–∞ –¥–æ—à–ª–∏))')

#determines a date of week
def determine_date(message):
    global chosen_date
    if message.text == 'üåÉ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        chosen_date = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üèô –í—Ç–æ—Ä–Ω–∏–∫':
        chosen_date = '–í—Ç–æ—Ä–Ω–∏–∫'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üèû –°—Ä–µ–¥–∞':
        chosen_date = '–°—Ä–µ–¥–∞'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üåÖ –ß–µ—Ç–≤–µ—Ä–≥':
        chosen_date = '–ß–µ—Ç–≤–µ—Ä–≥'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üåÑ –ü—è—Ç–Ω–∏—Ü–∞':
        chosen_date = '–ü—è—Ç–Ω–∏—Ü–∞'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üåá –°—É–±–±–æ—Ç–∞':
        chosen_date = '–°—É–±–±–æ—Ç–∞'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üåå –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        chosen_date = '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    else:
        bot.reply_to(message, '–¢—ã –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ\n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Å—è —É–∂–µ –¥–∞–Ω–Ω–æ–π —Ç–µ–±–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)')

#determines a lesson
def determine_lesson(message):
    global chosen_lesson
    chosen_lesson = message.text

    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞!\n(–¢–æ–ª—å–∫–æ –≤–≤–æ–¥–∏ –≤ —Ñ–æ—Ä–º–µ HH:MM –∏ –≤ 24-—á–∞—Å–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 22:30)')
    bot.register_next_step_handler(message, confirm_timetable)

#confirms timetable
def confirm_timetable(message):
    global monday, tuesday, wednesday, thursday, friday, saturday, sunday, chosen_lesson, chosen_date, chosen_time
    chosen_time = str(message.text)
    
    #keyboard
    confirm = types.ReplyKeyboardMarkup(resize_keyboard=True)
    yes = types.KeyboardButton('–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ!')
    no = types.KeyboardButton('–ù–µ—Ç, —è —Ö–æ—á—É –∫–æ–µ-—á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å!')
    confirm.add(yes, no)

    #sends a message and makes next step
    bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏–º)\n\
–í {0.text}, {1} —É —Ç–µ–±—è –±—É–¥–µ—Ç —É—Ä–æ–∫ {2}. –í–µ—Ä–Ω–æ?'.format(message,chosen_date,chosen_lesson), reply_markup=confirm)
    bot.register_next_step_handler(message, apply_changes)

#applies changes
def apply_changes(message):
    if message.text == '–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ!':
        global monday, tuesday, wednesday, thursday, friday, saturday, sunday, chosen_lesson, chosen_date, chosen_time
        #writing a lesson in dictionary
        if chosen_date == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
            monday[chosen_lesson] = chosen_time
        elif chosen_date == '–í—Ç–æ—Ä–Ω–∏–∫':
            tuesday[chosen_lesson] = chosen_time
        elif chosen_date == '–°—Ä–µ–¥–∞':
            wednesday[chosen_lesson] = chosen_time
        elif chosen_date == '–ß–µ—Ç–≤–µ—Ä–≥':
            thursday[chosen_lesson] = chosen_time
        elif chosen_date == '–ü—è—Ç–Ω–∏—Ü–∞':
            friday[chosen_lesson] = chosen_time
        elif chosen_date == '–°—É–±–±–æ—Ç–∞':
            saturday[chosen_lesson] = chosen_time
        elif chosen_date == '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
            sunday[chosen_lesson] = chosen_time

        bot.send_message(message.chat.id, '–í—Å–µ! –Ø –∑–∞–ø–æ–º–Ω–∏–ª —Ç–≤–æ–π —É—Ä–æ–∫! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ —ç—Ç–æ–º—É —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é,\
–∫–æ–≥–¥–∞ –∑–∞—Ö–æ—á–µ—à—å!')
    elif message.text == '–ù–µ—Ç, —è —Ö–æ—á—É –∫–æ–µ-—á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å!':
        bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ! –í–æ–∑–≤—Ä–∞—â–∞—é —Ç–µ–±—è –≤ –Ω–∞—á–∞–ª–æ!')
    else:
        bot.reply_to(message, '–ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç—ã –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ!')

bot.polling(none_stop=True, interval=0)