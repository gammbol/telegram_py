import telebot
from telebot import types

bot = telebot.TeleBot('2124840185:AAE1nh4vlzNfqRV_hzAjQVUvuZv3HgVQT0s')

#timetable data
chosen_time = ''
chosen_date = ''
chosen_lesson = ''
monday={}
tuesday = {}
wednesday = {}
thursday = {}
friday = {}
saturday = {}
sunday = {}

#keyboard
date = types.ReplyKeyboardMarkup(resize_keyboard=True)
mo = types.KeyboardButton('üåÉ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
tu = types.KeyboardButton('üèô –í—Ç–æ—Ä–Ω–∏–∫')
we = types.KeyboardButton('üèû –°—Ä–µ–¥–∞')
th = types.KeyboardButton('üåÖ –ß–µ—Ç–≤–µ—Ä–≥')
fr = types.KeyboardButton('üåÑ –ü—è—Ç–Ω–∏—Ü–∞')
sa = types.KeyboardButton('üåá –°—É–±–±–æ—Ç–∞')
su = types.KeyboardButton('üåå –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ')
date.add(mo, tu, we, th, fr, sa, su)

#keyboard
markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton('üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
item2 = types.KeyboardButton('‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
item3 = types.KeyboardButton('üîç –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
markup.add(item1,item2,item3)

action = types.ReplyKeyboardMarkup(resize_keyboard=True)
add = types.KeyboardButton('üìå –î–æ–±–∞–≤–∏—Ç—å')
delete = types.KeyboardButton('‚ùå –£–¥–∞–ª–∏—Ç—å')
action.add(add, delete)

#start chatting with bot
@bot.message_handler(commands=['start'])
def start(message):
    sti = open('welcome_sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)

    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, <b>{0.first_name}</b>! \n–° —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, —è, <b>{1.first_name}</b>,\
–±—É–¥—É –≤–∞—à–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —à–∫–æ–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!".format(message.from_user, bot.get_me()), parse_mode='html')
    bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ \'/reg\', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É!')

#start of registration
@bot.message_handler(commands=['reg'])
def reg(message):
    bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)

#echo all messages
@bot.message_handler(func=lambda m: True)
def echo_all(message):
    if message.text == 'üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        #keyboard
        choice = types.ReplyKeyboardMarkup(resize_keyboard=True)
        y = types.KeyboardButton('üü© –î–∞, —É–≤–µ—Ä–µ–Ω(-–∞)')
        n = types.KeyboardButton('üü• –ù–µ—Ç, –Ω–µ —É–≤–µ—Ä–µ–Ω(-–∞)')
        choice.add(y,n)

        bot.send_message(message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã?\n–≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –≤–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!', reply_markup=choice)
        bot.register_next_step_handler(message, create_new_timetable)
    elif message.text == '‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        global monday, tuesday, wednesday, thursday, friday, saturday, sunday

        #next registration step
        bot.send_message(message.chat.id, '–ö–∞–∫ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?', reply_markup=action)
        bot.register_next_step_handler(message, choosing_action)
    elif message.text == 'üîç –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
        bot.send_message(message.chat.id, '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∫–æ–≥–æ –¥–Ω—è –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?', reply_markup=date)
        bot.register_next_step_handler(message, show_timetable)
    else:
        bot.reply_to(message, '–£ —Ç–µ–±—è –Ω–µ—Ç –¥—Ä—É–∑–µ–π?\n–ü–æ—á–µ–º—É —Ç—ã –æ–±—â–∞–µ—à—å—Å—è —Å –±–æ—Ç–æ–º?')

#shows timetable
def show_timetable(message):
    if monday or tuesday or wednesday or thursday or friday or saturday or sunday:
        if message.text == 'üåÉ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
            for lesson, time in monday.items():
                bot.reply_to(message, '{0}: {1}'.format(lesson,time))
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif message.text == 'üèô –í—Ç–æ—Ä–Ω–∏–∫':
            for lesson, time in tuesday.items():
                bot.reply_to(message, '{0} : {1}'.format(lesson,time))
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif message.text == 'üèû –°—Ä–µ–¥–∞':
            for lesson, time in wednesday.items():
                bot.reply_to(message, '{0} : {1}'.format(lesson,time))
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif message.text == 'üåÖ –ß–µ—Ç–≤–µ—Ä–≥':
            for lesson, time in thursday.items():
                bot.reply_to(message, '{0} : {1}'.format(lesson,time))
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif message.text == 'üåÑ –ü—è—Ç–Ω–∏—Ü–∞':
            for lesson, time in friday.items():
                bot.reply_to(message, '{0} : {1}'.format(lesson,time))
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif message.text == 'üåá –°—É–±–±–æ—Ç–∞':
            for lesson, time in saturday.items():
                bot.reply_to(message, '{0} : {1}'.format(lesson,time))
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif message.text == 'üåå –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
            for lesson, time in sunday.items():
                bot.reply_to(message, '{0} : {1}'.format(lesson,time))
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        else:
            bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —É–∂–µ –¥–∞–Ω–Ω–æ–π –≤–∞–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    else:
        bot.reply_to(message, '–ú–Ω–µ –Ω–µ—á–µ–≥–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å!\n–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ!')
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
        bot.register_next_step_handler(message, echo_all)

#creating new timetable
def create_new_timetable(message):
    if message.text == 'üü© –î–∞, —É–≤–µ—Ä–µ–Ω(-–∞)':
        monday.clear()
        tuesday.clear()
        wednesday.clear()
        thursday.clear()
        friday.clear()
        saturday.clear()
        sunday.clear()

        bot.send_message(message.chat.id, '–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–æ!')
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
        bot.register_next_step_handler(message, echo_all)
    elif message.text == 'üü• –ù–µ—Ç, –Ω–µ —É–≤–µ—Ä–µ–Ω(-–∞)':
        bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ! –í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ!')
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
        bot.register_next_step_handler(message, echo_all)
    else:
        bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —É–∂–µ –¥–∞–Ω–Ω–æ–π –≤–∞–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)')
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
        bot.register_next_step_handler(message, echo_all)

#choses action to do (delete or add)
def choosing_action(message):
    if message.text == '‚ùå –£–¥–∞–ª–∏—Ç—å':
        if monday or tuesday or wednesday or thursday or friday or saturday or sunday:
            bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –¥–µ–Ω—å, –≤ –∫–æ—Ç–æ—Ä–æ–º —É—Ä–æ–∫ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å', reply_markup=date)
            bot.register_next_step_handler(message, determine_date_to_delete)
        else:
            bot.reply_to(message, '–í–∞–º –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å!\n–í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    elif message.text == 'üìå –î–æ–±–∞–≤–∏—Ç—å':
            #question
            bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ!\n–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∫–æ–≥–æ –¥–Ω—è –≤–∞–º –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å?', reply_markup=date)

            #next registration step
            bot.register_next_step_handler(message, determine_date)

#detirmines date to delete
def determine_date_to_delete(message):
    global chosen_date
    if message.text == 'üåÉ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        chosen_date = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, delete_lesson)
    elif message.text == 'üèô –í—Ç–æ—Ä–Ω–∏–∫':
        chosen_date = '–í—Ç–æ—Ä–Ω–∏–∫'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, delete_lesson)
    elif message.text == 'üèû –°—Ä–µ–¥–∞':
        chosen_date = '–°—Ä–µ–¥–∞'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, delete_lesson)
    elif message.text == 'üåÖ –ß–µ—Ç–≤–µ—Ä–≥':
        chosen_date = '–ß–µ—Ç–≤–µ—Ä–≥'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, delete_lesson)
    elif message.text == 'üåÑ –ü—è—Ç–Ω–∏—Ü–∞':
        chosen_date = '–ü—è—Ç–Ω–∏—Ü–∞'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, delete_lesson)
    elif message.text == 'üåá –°—É–±–±–æ—Ç–∞':
        chosen_date = '–°—É–±–±–æ—Ç–∞'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, delete_lesson)
    elif message.text == 'üåå –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        chosen_date = '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, delete_lesson)
    else:
        bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —É–∂–µ –¥–∞–Ω–Ω–æ–π –≤–∞–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)')
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
        bot.register_next_step_handler(message, echo_all)

#deletes determined lesson
def delete_lesson(message):
    if chosen_date == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        if message.text in monday:
            del monday[message.text]
            bot.send_message(message.chat.id, '–£—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\
–ù–∞–ø—Ä–∞–≤–ª—è—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        else:
            bot.reply_to(message, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞ –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    elif chosen_date == '–í—Ç–æ—Ä–Ω–∏–∫':
        if message.text in tuesday:
            del tuesday[message.text]
            bot.send_message(message.chat.id, '–£—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\
–ù–∞–ø—Ä–∞–≤–ª—è—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        else:
            bot.reply_to(message, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞ –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    elif chosen_date == '–°—Ä–µ–¥–∞':
        if message.text in wednesday:
            del wednesday[message.text]
            bot.send_message(message.chat.id, '–£—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\
–ù–∞–ø—Ä–∞–≤–ª—è—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        else:
            bot.reply_to(message, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞ –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    elif chosen_date == '–ß–µ—Ç–≤–µ—Ä–≥':
        if message.text in thursday:
            del thursday[message.text]
            bot.send_message(message.chat.id, '–£—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\
–ù–∞–ø—Ä–∞–≤–ª—è—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        else:
            bot.reply_to(message, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞ –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    elif chosen_date == '–ü—è—Ç–Ω–∏—Ü–∞':
        if message.text in friday:
            del friday[message.text]
            bot.send_message(message.chat.id, '–£—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\
–ù–∞–ø—Ä–∞–≤–ª—è—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        else:
            bot.reply_to(message, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞ –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    elif chosen_date == '–°—É–±–±–æ—Ç–∞':
        if message.text in saturday:
            del saturday[message.text]
            bot.send_message(message.chat.id, '–£—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\
–ù–∞–ø—Ä–∞–≤–ª—è—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        else:
            bot.reply_to(message, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞ –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    elif chosen_date == '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        if message.text in sunday:
            del sunday[message.text]
            bot.send_message(message.chat.id, '–£—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\
–ù–∞–ø—Ä–∞–≤–ª—è—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        else:
            bot.reply_to(message, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ —É—Ä–æ–∫–∞ –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ –Ω–µ—Ç!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    else:
        bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ\n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —É–∂–µ –¥–∞–Ω–Ω–æ–π –≤–∞–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)')
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
        bot.register_next_step_handler(message, echo_all)

#determines a date of week
def determine_date(message):
    global chosen_date
    if message.text == 'üåÉ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        chosen_date = '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üèô –í—Ç–æ—Ä–Ω–∏–∫':
        chosen_date = '–í—Ç–æ—Ä–Ω–∏–∫'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üèû –°—Ä–µ–¥–∞':
        chosen_date = '–°—Ä–µ–¥–∞'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üåÖ –ß–µ—Ç–≤–µ—Ä–≥':
        chosen_date = '–ß–µ—Ç–≤–µ—Ä–≥'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üåÑ –ü—è—Ç–Ω–∏—Ü–∞':
        chosen_date = '–ü—è—Ç–Ω–∏—Ü–∞'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üåá –°—É–±–±–æ—Ç–∞':
        chosen_date = '–°—É–±–±–æ—Ç–∞'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    elif message.text == 'üåå –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
        chosen_date = '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
        bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–∫–∞!')
        bot.register_next_step_handler(message, determine_lesson)
    else:
        bot.reply_to(message, '–í—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ\n –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —É–∂–µ –¥–∞–Ω–Ω–æ–π –≤–∞–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π :)')
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
        bot.register_next_step_handler(message, echo_all)

#determines a lesson
def determine_lesson(message):
    global chosen_lesson
    chosen_lesson = message.text

    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —É—Ä–æ–∫–∞!\n(–¢–æ–ª—å–∫–æ –≤–≤–æ–¥–∏ –≤ —Ñ–æ—Ä–º–µ HH:MM –∏ –≤ 24-—á–∞—Å–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 22:30)')
    bot.register_next_step_handler(message, confirm_timetable)

#confirms timetable
def confirm_timetable(message):
    global monday, tuesday, wednesday, thursday, friday, saturday, sunday, chosen_lesson, chosen_date, chosen_time
    chosen_time = message.text
    
    #keyboard
    confirm = types.ReplyKeyboardMarkup(resize_keyboard=True)
    yes = types.KeyboardButton('üü¢ –î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ!')
    no = types.KeyboardButton('üî¥ –ù–µ—Ç, —è —Ö–æ—á—É –∫–æ–µ-—á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å!')
    confirm.add(yes, no)

    #sends a message and makes next step
    bot.send_message(message.chat.id, '–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∏–º)\n\
–í {0.text}, {1} —É –≤–∞—Å –±—É–¥–µ—Ç —É—Ä–æ–∫ {2}. –í–µ—Ä–Ω–æ?'.format(message,chosen_date,chosen_lesson), reply_markup=confirm)
    bot.register_next_step_handler(message, apply_changes)

#applies changes
def apply_changes(message):
    if message.text == 'üü¢ –î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ!':
        global monday, tuesday, wednesday, thursday, friday, saturday, sunday, chosen_lesson, chosen_date, chosen_time
        #writing a lesson in dictionary
        if chosen_date == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
            monday[chosen_lesson] = chosen_time
            print(monday)
            bot.send_message(message.chat.id, '–í–∞—à —É—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif chosen_date == '–í—Ç–æ—Ä–Ω–∏–∫':
            tuesday[chosen_lesson] = chosen_time
            print(tuesday)
            bot.send_message(message.chat.id, '–í–∞—à —É—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif chosen_date == '–°—Ä–µ–¥–∞':
            wednesday[chosen_lesson] = chosen_time
            print(wednesday)
            bot.send_message(message.chat.id, '–í–∞—à —É—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif chosen_date == '–ß–µ—Ç–≤–µ—Ä–≥':
            thursday[chosen_lesson] = chosen_time
            print(thursday)
            bot.send_message(message.chat.id, '–í–∞—à —É—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif chosen_date == '–ü—è—Ç–Ω–∏—Ü–∞':
            friday[chosen_lesson] = chosen_time
            print(friday)
            bot.send_message(message.chat.id, '–í–∞—à —É—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif chosen_date == '–°—É–±–±–æ—Ç–∞':
            saturday[chosen_lesson] = chosen_time
            print(saturday)
            bot.send_message(message.chat.id, '–í–∞—à —É—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
        elif chosen_date == '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ':
            sunday[chosen_lesson] = chosen_time
            print(sunday)
            bot.send_message(message.chat.id, '–í–∞—à —É—Ä–æ–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n–í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ!')
            bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
            bot.register_next_step_handler(message, echo_all)
    elif message.text == 'üî¥ –ù–µ—Ç, —è —Ö–æ—á—É –∫–æ–µ-—á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å!':
        bot.send_message(message.chat.id, '–•–æ—Ä–æ—à–æ! –í–æ–∑–≤—Ä–∞—â–∞—é –≤–∞—Å –≤ –Ω–∞—á–∞–ª–æ!')
        bot.send_message(message.chat.id, '–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ:', reply_markup=markup)
        bot.register_next_step_handler(message, echo_all)
    else:
        bot.reply_to(message, '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –≤–≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ!')

bot.polling(none_stop=True, interval=0)